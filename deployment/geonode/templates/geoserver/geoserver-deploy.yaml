# geoserver stateful set
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ include "geoserver_container_name" . }}"
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      org.geonode.instance: "{{ include "geoserver_container_name" . }}"
  serviceName: "{{ include "geoserver_container_name" . }}"
  replicas: 1
  template:
    metadata:
      labels:
        org.geonode.instance: "{{ include "geoserver_container_name" . }}"
    spec:
      terminationGracePeriodSeconds: 3
      initContainers:
      - name: data-dir-conf
        image: geonode/geoserver_data:{{ .Values.geoserver.image.tag }}
        command:
        - sh
        - -c
        - |
          # Copy defaults from data container
          cp -r /tmp/geonode/downloaded/data /geoserver_data

          # Copy overrides from ConfigMap
          cp /overrides/notifier.xml /geoserver_data/data/notifier/

          # Update custom EPSG codes
          cat /geoserver_data/data/user_projections/epsg.properties > /tmp/epsg.properties
          {{- range .Values.geoserver.customEPSGs }}
          echo '{{ . }}' >> /tmp/epsg.properties
          {{- end }}
          {{- range .Values.geoserver.extraCustomEPSGs }}
          echo '{{ . }}' >> /tmp/epsg.properties
          {{- end }}
          sort -u /tmp/epsg.properties > /geoserver_data/data/user_projections/epsg.properties
        volumeMounts:
        - name: persistence
          mountPath: /geoserver_data/data
          subPath: geoserver-data-dir
        - name: geoserver-notifier-xml
          mountPath: /overrides

      containers:
      - name: geoserver
        image: "{{ .Values.geoserver.image.name }}:{{ .Values.geoserver.image.tag }}"
        # command: 
        #   - tail
        #   - -f
        #   - /dev/null
        ports:
        - containerPort: {{ .Values.geoserver.port }}
        envFrom:
          - configMapRef:
              name:  {{ include "geoserver_container_name" . }}-env
        env:
          # read auto generated password from secret
          - name: GEONODE_GEODATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.postgres.geodatabasename }}.{{ include "postgres_container_name" . }}.credentials.postgresql.acid.zalan.do
                key: password
                
        volumeMounts:
        - name: persistence
          mountPath: /geoserver_data/data
          subPath: geoserver-data-dir
        readinessProbe:
          tcpSocket:
            port: {{ .Values.geoserver.port }}
          initialDelaySeconds: 60
          periodSeconds: 5
          failureThreshold: 15
        livenessProbe:
          tcpSocket:
            port: {{ .Values.geoserver.port }}
          initialDelaySeconds: 180
          periodSeconds: 5
          failureThreshold: 15
        # resources:
        #   requests:
        #     memory: 2Gi
        #     cpu: 100m
        #   limits:
        #     memory: 4Gi
        #     cpu: 400m
      volumes:
      - name: geoserver-notifier-xml
        configMap:
          name: {{ .Release.Name }}-geoserver-notifier-xml
      - name: persistence
        persistentVolumeClaim:
          claimName: pvc-{{ .Release.Name }}-geonode
