{{ if .Values.pycsw.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ include "pycsw_pod_name" . }}"
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.pycsw.replicaCount }}
  selector:
    matchLabels:
      org.geonode.instance: "{{ include "pycsw_pod_name" . }}"
  serviceName: "{{ include "pycsw_pod_name" . }}"
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        org.geonode.instance: "{{ include "pycsw_pod_name" . }}"
      annotations:
        checksum/pycsw-env: {{ include (print $.Template.BasePath "/pycsw/pycsw-env.yaml") . | sha256sum }}
        checksum/pycsw-cfg: {{ include (print $.Template.BasePath "/pycsw/pycsw-cfg.yaml") . | sha256sum }}
        checksum/pycsw-mappings-py: {{ include (print $.Template.BasePath "/pycsw/pycsw-mappings-py.yaml") . | sha256sum }}
    spec:
      terminationGracePeriodSeconds: 3
      containers:
      - name: {{ .Values.pycsw.container_name }}
        image: "{{ .Values.pycsw.image.name }}:{{ .Values.pycsw.image.tag }}"

        envFrom:
          - configMapRef:
              name: {{ include "pycsw_pod_name" . }}-env
        
        env:
        - name: PYCSW_SERVER_URL
          value: "{{ .Values.geonode.ingress.externalDomain}}{{ .Values.pycsw.endpoint }}"
        - name: GEONODE_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name:  {{ .Values.postgres.geonodedatabase }}.{{ include "postgres_pod_name" . }}.credentials.postgresql.acid.zalan.do
              key: password
        - name: PYCSW_REPOSITORY_DATABASE_URI
          value: "postgis://$(GEONODE_DATABASE):$(GEONODE_DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(GEONODE_DATABASE)"       
        
        ports:
        - containerPort: {{ .Values.pycsw.port }}
        
        volumeMounts:
        - name: pycsw-pycsw-cfg
          mountPath: "/etc/pycsw/pycsw.cfg"
          subPath: pycsw.cfg
          readOnly: true
        - name: pycsw-mappings-py
          mountPath: {{ .Values.pycsw.config.repository.mappings }}
          subPath: mappings.py
          readOnly: true        
        resources:
          requests:
            memory: {{ .Values.pycsw.resources.requests.memory }}
            cpu: {{ .Values.pycsw.resources.requests.cpu }}
          limits:
            memory: {{ .Values.pycsw.resources.limits.memory }}
            cpu: {{ .Values.pycsw.resources.limits.cpu }}
      volumes:
      - name: pycsw-pycsw-cfg
        configMap:
          name: {{ .Release.Name }}-pycsw-pycsw-cfg
          defaultMode: 0744
          items:
          - key: pycsw-pycsw-cfg
            path: "pycsw-pycsw-cfg"
      - name: pycsw-mappings-py
        configMap:
          name: {{ .Release.Name }}-pycsw-mappings-py
          defaultMode: 0744
          items:
          - key: pycsw-mappings-py
            path: "pycsw-mappings-py"
{{ end }}
