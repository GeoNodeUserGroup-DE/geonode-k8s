
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ include "nginx_pod_name" . }}"
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      org.geonode.instance: "{{ include "nginx_pod_name" . }}"
  replicas: {{ .Values.nginx.replicaCount }}
  template:
    metadata:
      labels:
        org.geonode.instance: "{{ include "nginx_pod_name" . }}"
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/nginx/nginx-conf.yaml") . | sha256sum }}
    spec:
      terminationGracePeriodSeconds: 3

{{- if not (empty .Values.nginx.imagePullSecret) }}
      imagePullSecrets:
      - name: {{ .Values.nginx.imagePullSecret }}
{{ end }}
      initContainers:
      # This is the django app server
      - name: {{ .Values.nginx.container_name }}-build-static
        image: "{{ .Values.geonode.image.name }}:{{ .Values.geonode.image.tag }}"
        imagePullPolicy: {{ .Values.geonode.imagePullPolicy }}
        command:
        - bash
        - -c
        - |
          mkdir -p $STATIC_ROOT
          python manage.py collectstatic --noinput
        envFrom:
          - configMapRef:
              name: {{ include "geonode_pod_name" . }}-env
        volumeMounts:
        - name: pvc-{{ .Release.Name }}-statics
          mountPath: /mnt/volumes/statics
          subPath: statics

      containers:
      - name: {{ .Values.nginx.container_name }}
        image: "{{ .Values.nginx.image.name }}:{{ .Values.nginx.image.tag }}"
        imagePullPolicy: {{ .Values.nginx.imagePullPolicy }}
        ports:
          - name: http
        {{- if (eq .Values.geonode.general.externalScheme "https" )}}
            containerPort: 443
        {{- else }}
            containerPort: 80
        {{- end }}

        volumeMounts:
        - name: pvc-{{ .Release.Name }}-statics
          mountPath: /mnt/volumes/statics
          subPath: statics
        - name: geonode-favicon
          mountPath: /mnt/volumes/statics/static/geonode/img/favicon.ico
          subPath: favicon.ico
        - name: nginx-confd
          mountPath: /etc/nginx/conf.d

        # this will fail as long as statics are not build by the geonode sts
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 15
          timeoutSeconds: 5

        resources:
          requests:
            memory: {{ .Values.nginx.resources.requests.memory }}
            cpu: {{ .Values.nginx.resources.requests.cpu }}
          limits:
            memory: {{ .Values.nginx.resources.limits.memory }}
            cpu: {{ .Values.nginx.resources.limits.cpu }}

      volumes:
      - name: nginx-confd
        configMap:
          name: {{ .Release.Name }}-nginx-confd
      - name: geonode-favicon
        configMap:
          name: {{ .Release.Name }}-geonode-favicon
      - name: pvc-{{ .Release.Name }}-statics
        persistentVolumeClaim:
          claimName: pvc-{{ .Release.Name }}-statics