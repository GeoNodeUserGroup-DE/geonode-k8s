# geonode stateful set
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ include "geonode_pod_name" . }}"
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      org.geonode.instance: "{{ include "geonode_pod_name" . }}"
  serviceName: "{{ include "geonode_pod_name" . }}"
  replicas: {{ .Values.geonode.replicaCount }}
  template:
    metadata:
      labels:
        org.geonode.instance: "{{ include "geonode_pod_name" . }}"
      annotations:
        checksum/geonode-env: {{ include (print $.Template.BasePath "/geonode/geonode-env.yaml") . | sha256sum }}
        checksum/geonode-secret: {{ include (print $.Template.BasePath "/geonode/geonode-secret.yaml") . | sha256sum }}
        checksum/geonode-tasks-py: {{ include (print $.Template.BasePath "/geonode/geonode-tasks-py-conf.yaml") . | sha256sum }}
        checksum/geonode-local-settings: {{ include (print $.Template.BasePath "/geonode/geonode-local-settings.yaml") . | sha256sum }}
        checksum/geonode-settings-additions: {{ include (print $.Template.BasePath "/geonode/geonode-settings-additions.yaml") . | sha256sum }}
    spec:
      terminationGracePeriodSeconds: 3

{{- if not (empty .Values.geonode.imagePullSecret) }}
      imagePullSecrets:
      - name: {{ .Values.geonode.imagePullSecret }}
{{ end }}

      containers:
      # This is the django app server
      - name: {{ .Values.geonode.container_name }}
        image: "{{ .Values.geonode.image.name }}:{{ .Values.geonode.image.tag }}"
        imagePullPolicy: {{ .Values.geonode.imagePullPolicy }}
        command:
        - bash
        - -c
        - |
          # install dockerize...
          wget -q https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
            && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
            && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz

          {{ if .Values.geonode.ldap.enabled }}
          # install geonode ldap contrib if ldap enabled. it would be better to have a base model with ldap included,
          # but this way we can build the vanilla Dockerfile from geonode/geonode

          cd /usr/src; git clone https://github.com/GeoNode/geonode-contribs.git -b master
          cd /usr/src/geonode-contribs/ldap; pip install --upgrade  -e .
          cd /usr/src/geonode/
          {{ end }}

          cd {{ include "geonode_root_path" .}}/
          # Add config overrides
          cat /usr/src/geonode/geonode/geonode-k8s-settings.py >> {{ include "geonode_path" .}}/settings.py
          cat /usr/src/geonode/geonode/geonode-k8s-settings-additions.py >> {{ include "geonode_path" .}}/settings.py

          # build statics for nginx invoke tasks
          
          invoke statics

        envFrom:
        - configMapRef:
            name: {{ include "geonode_pod_name" . }}-env
        - secretRef:
            name: {{ .Values.geonode.secret.existingSecretName | default (include "geonode_secret_name" .) | quote }}
        - secretRef:
            name: {{ .Values.geoserver.secret.existingSecretName | default (include "geoserver_secret_name" .) | quote }}
        volumeMounts:
        - name: tasks-py
          mountPath: "{{ include "geonode_root_path" .}}/tasks.py"
          subPath: tasks.py
          readOnly: true
        - name: geonode-k8s-settings-py
          mountPath: "/usr/src/geonode/geonode/geonode-k8s-settings.py"
          subPath: geonode-k8s-settings.py
        - name: geonode-k8s-settings-additions-py
          mountPath: "/usr/src/geonode/geonode/geonode-k8s-settings-additions.py"
          subPath: geonode-k8s-settings-additions.py
          readOnly: true
      volumes:
        - name: tasks-py
          configMap:
            name: {{ .Release.Name }}-geonode-tasks-py
            items:
            - key: tasks.py
              path: "tasks.py"
        - name: geonode-k8s-settings-py
          configMap:
            name: {{ .Release.Name }}-geonode-k8s-settings-py
            defaultMode: 0744
            items:
            - key: geonode-k8s-settings.py
              path: "geonode-k8s-settings.py"
        - name: geonode-k8s-settings-additions-py
          configMap:
            name: {{ .Release.Name }}-geonode-k8s-settings-additions-py
            defaultMode: 0744
            items:
            - key: geonode-k8s-settings-additions.py
              path: "geonode-k8s-settings-additions.py"
        # Using an emptyDir to cache compiled statics... it will survive container crashes, but not pod restarts
        - name: cache-volume
          emptyDir: {}

